import React, { useEffect, useState, useCallback, useMemo, cloneElement } from 'react';
import { createPortal } from 'react-dom';
import copy from 'copy-to-clipboard';

function _regeneratorRuntime() {
  _regeneratorRuntime = function () {
    return exports;
  };
  var exports = {},
    Op = Object.prototype,
    hasOwn = Op.hasOwnProperty,
    defineProperty = Object.defineProperty || function (obj, key, desc) {
      obj[key] = desc.value;
    },
    $Symbol = "function" == typeof Symbol ? Symbol : {},
    iteratorSymbol = $Symbol.iterator || "@@iterator",
    asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator",
    toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";
  function define(obj, key, value) {
    return Object.defineProperty(obj, key, {
      value: value,
      enumerable: !0,
      configurable: !0,
      writable: !0
    }), obj[key];
  }
  try {
    define({}, "");
  } catch (err) {
    define = function (obj, key, value) {
      return obj[key] = value;
    };
  }
  function wrap(innerFn, outerFn, self, tryLocsList) {
    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,
      generator = Object.create(protoGenerator.prototype),
      context = new Context(tryLocsList || []);
    return defineProperty(generator, "_invoke", {
      value: makeInvokeMethod(innerFn, self, context)
    }), generator;
  }
  function tryCatch(fn, obj, arg) {
    try {
      return {
        type: "normal",
        arg: fn.call(obj, arg)
      };
    } catch (err) {
      return {
        type: "throw",
        arg: err
      };
    }
  }
  exports.wrap = wrap;
  var ContinueSentinel = {};
  function Generator() {}
  function GeneratorFunction() {}
  function GeneratorFunctionPrototype() {}
  var IteratorPrototype = {};
  define(IteratorPrototype, iteratorSymbol, function () {
    return this;
  });
  var getProto = Object.getPrototypeOf,
    NativeIteratorPrototype = getProto && getProto(getProto(values([])));
  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);
  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);
  function defineIteratorMethods(prototype) {
    ["next", "throw", "return"].forEach(function (method) {
      define(prototype, method, function (arg) {
        return this._invoke(method, arg);
      });
    });
  }
  function AsyncIterator(generator, PromiseImpl) {
    function invoke(method, arg, resolve, reject) {
      var record = tryCatch(generator[method], generator, arg);
      if ("throw" !== record.type) {
        var result = record.arg,
          value = result.value;
        return value && "object" == typeof value && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) {
          invoke("next", value, resolve, reject);
        }, function (err) {
          invoke("throw", err, resolve, reject);
        }) : PromiseImpl.resolve(value).then(function (unwrapped) {
          result.value = unwrapped, resolve(result);
        }, function (error) {
          return invoke("throw", error, resolve, reject);
        });
      }
      reject(record.arg);
    }
    var previousPromise;
    defineProperty(this, "_invoke", {
      value: function (method, arg) {
        function callInvokeWithMethodAndArg() {
          return new PromiseImpl(function (resolve, reject) {
            invoke(method, arg, resolve, reject);
          });
        }
        return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
      }
    });
  }
  function makeInvokeMethod(innerFn, self, context) {
    var state = "suspendedStart";
    return function (method, arg) {
      if ("executing" === state) throw new Error("Generator is already running");
      if ("completed" === state) {
        if ("throw" === method) throw arg;
        return doneResult();
      }
      for (context.method = method, context.arg = arg;;) {
        var delegate = context.delegate;
        if (delegate) {
          var delegateResult = maybeInvokeDelegate(delegate, context);
          if (delegateResult) {
            if (delegateResult === ContinueSentinel) continue;
            return delegateResult;
          }
        }
        if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) {
          if ("suspendedStart" === state) throw state = "completed", context.arg;
          context.dispatchException(context.arg);
        } else "return" === context.method && context.abrupt("return", context.arg);
        state = "executing";
        var record = tryCatch(innerFn, self, context);
        if ("normal" === record.type) {
          if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue;
          return {
            value: record.arg,
            done: context.done
          };
        }
        "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg);
      }
    };
  }
  function maybeInvokeDelegate(delegate, context) {
    var methodName = context.method,
      method = delegate.iterator[methodName];
    if (undefined === method) return context.delegate = null, "throw" === methodName && delegate.iterator.return && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method) || "return" !== methodName && (context.method = "throw", context.arg = new TypeError("The iterator does not provide a '" + methodName + "' method")), ContinueSentinel;
    var record = tryCatch(method, delegate.iterator, context.arg);
    if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel;
    var info = record.arg;
    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel);
  }
  function pushTryEntry(locs) {
    var entry = {
      tryLoc: locs[0]
    };
    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);
  }
  function resetTryEntry(entry) {
    var record = entry.completion || {};
    record.type = "normal", delete record.arg, entry.completion = record;
  }
  function Context(tryLocsList) {
    this.tryEntries = [{
      tryLoc: "root"
    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);
  }
  function values(iterable) {
    if (iterable) {
      var iteratorMethod = iterable[iteratorSymbol];
      if (iteratorMethod) return iteratorMethod.call(iterable);
      if ("function" == typeof iterable.next) return iterable;
      if (!isNaN(iterable.length)) {
        var i = -1,
          next = function next() {
            for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;
            return next.value = undefined, next.done = !0, next;
          };
        return next.next = next;
      }
    }
    return {
      next: doneResult
    };
  }
  function doneResult() {
    return {
      value: undefined,
      done: !0
    };
  }
  return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, "constructor", {
    value: GeneratorFunctionPrototype,
    configurable: !0
  }), defineProperty(GeneratorFunctionPrototype, "constructor", {
    value: GeneratorFunction,
    configurable: !0
  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) {
    var ctor = "function" == typeof genFun && genFun.constructor;
    return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name));
  }, exports.mark = function (genFun) {
    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun;
  }, exports.awrap = function (arg) {
    return {
      __await: arg
    };
  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {
    return this;
  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {
    void 0 === PromiseImpl && (PromiseImpl = Promise);
    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);
    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {
      return result.done ? result.value : iter.next();
    });
  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () {
    return this;
  }), define(Gp, "toString", function () {
    return "[object Generator]";
  }), exports.keys = function (val) {
    var object = Object(val),
      keys = [];
    for (var key in object) keys.push(key);
    return keys.reverse(), function next() {
      for (; keys.length;) {
        var key = keys.pop();
        if (key in object) return next.value = key, next.done = !1, next;
      }
      return next.done = !0, next;
    };
  }, exports.values = values, Context.prototype = {
    constructor: Context,
    reset: function (skipTempReset) {
      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);
    },
    stop: function () {
      this.done = !0;
      var rootRecord = this.tryEntries[0].completion;
      if ("throw" === rootRecord.type) throw rootRecord.arg;
      return this.rval;
    },
    dispatchException: function (exception) {
      if (this.done) throw exception;
      var context = this;
      function handle(loc, caught) {
        return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught;
      }
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i],
          record = entry.completion;
        if ("root" === entry.tryLoc) return handle("end");
        if (entry.tryLoc <= this.prev) {
          var hasCatch = hasOwn.call(entry, "catchLoc"),
            hasFinally = hasOwn.call(entry, "finallyLoc");
          if (hasCatch && hasFinally) {
            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);
            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);
          } else if (hasCatch) {
            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);
          } else {
            if (!hasFinally) throw new Error("try statement without catch or finally");
            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);
          }
        }
      }
    },
    abrupt: function (type, arg) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) {
          var finallyEntry = entry;
          break;
        }
      }
      finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);
      var record = finallyEntry ? finallyEntry.completion : {};
      return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);
    },
    complete: function (record, afterLoc) {
      if ("throw" === record.type) throw record.arg;
      return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;
    },
    finish: function (finallyLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;
      }
    },
    catch: function (tryLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc === tryLoc) {
          var record = entry.completion;
          if ("throw" === record.type) {
            var thrown = record.arg;
            resetTryEntry(entry);
          }
          return thrown;
        }
      }
      throw new Error("illegal catch attempt");
    },
    delegateYield: function (iterable, resultName, nextLoc) {
      return this.delegate = {
        iterator: values(iterable),
        resultName: resultName,
        nextLoc: nextLoc
      }, "next" === this.method && (this.arg = undefined), ContinueSentinel;
    }
  }, exports;
}
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
  try {
    var info = gen[key](arg);
    var value = info.value;
  } catch (error) {
    reject(error);
    return;
  }
  if (info.done) {
    resolve(value);
  } else {
    Promise.resolve(value).then(_next, _throw);
  }
}
function _asyncToGenerator(fn) {
  return function () {
    var self = this,
      args = arguments;
    return new Promise(function (resolve, reject) {
      var gen = fn.apply(self, args);
      function _next(value) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
      }
      function _throw(err) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
      }
      _next(undefined);
    });
  };
}
function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}

var animationCSS = ".socialShareBackdropFadeIn{animation:simpleFade .5s;}.socialShareBackdropFadeOut{animation:simpleFade .5s reverse;}.socialSharePopupMoveIn{animation:fadeInUp .5s; }.socialSharePopupMoveOut{animation:fadeInUp .5s reverse; }@keyframes simpleFade{0%{opacity:0}100%{opacity:1}}@keyframes fadeInUp{0%{opacity:0;transform:translateY(20px)}100%{opacity:1;transform:translateY(0)}}";
function Backdrop(_ref) {
  var children = _ref.children,
    onClose = _ref.onClose,
    backdropColor = _ref.backdropColor,
    fadeClass = _ref.fadeClass;
  var handleOnClose = function handleOnClose(e) {
    if (e.target === e.currentTarget) {
      onClose(e);
    }
  };
  return React.createElement("div", {
    onClick: handleOnClose,
    className: fadeClass,
    style: {
      background: backdropColor,
      position: "fixed",
      left: 0,
      top: 0,
      width: "100%",
      height: "100%",
      display: "flex",
      flexDirection: "column",
      alignItems: "center",
      justifyContent: "flex-end",
      zIndex: 1400
    }
  }, React.createElement("style", {
    children: animationCSS
  }), children);
}

var iconList = {
  facebook: {
    title: "Facebook",
    path: /*#__PURE__*/React.createElement("path", {
      d: "M24 12a12 12 0 10-13.9 11.9v-8.4h-3V12h3V9.4c0-3 1.8-4.7 4.6-4.7l2.6.2v3h-1.5c-1.5 0-2 .9-2 1.8V12h3.4l-.5 3.5h-2.8v8.4A12 12 0 0024 12z"
    }),
    color: "#0076FB",
    url: function url(l) {
      return "https://www.facebook.com/sharer/sharer.php?u=" + l;
    }
  },
  twitter: {
    title: "Twitter",
    path: /*#__PURE__*/React.createElement("path", {
      d: "M24 4.6a10 10 0 01-2.9.7 5 5 0 002.2-2.7c-1 .6-2 1-3.1 1.2a5 5 0 00-8.4 4.5A14 14 0 011.6 3.2 4.8 4.8 0 001 5.6a5 5 0 002.2 4.1 4.9 4.9 0 01-2.3-.6A5 5 0 005 14a5 5 0 01-2.2 0 5 5 0 004.6 3.5 9.9 9.9 0 01-6.1 2.1H0a14 14 0 007.6 2.2c9 0 14-7.5 14-14V7A10 10 0 0024 4.6z"
    }),
    color: "#1DA1F2",
    url: function url(l, t) {
      return "https://twitter.com/intent/tweet?text=" + t + "&url=" + l;
    }
  },
  whatsapp: {
    title: "WhatsApp",
    path: /*#__PURE__*/React.createElement("path", {
      d: "M17.5 14.4l-2-1c-.3 0-.5-.1-.7.2l-1 1.1c-.1.2-.3.3-.6.1s-1.3-.5-2.4-1.5a9 9 0 01-1.7-2c-.1-.3 0-.5.2-.6l.4-.6c.2-.1.2-.3.3-.5v-.5L9 7c-.2-.6-.4-.5-.6-.5h-.6c-.2 0-.5 0-.8.4-.2.3-1 1-1 2.5s1 2.8 1.2 3c.2.2 2.1 3.2 5.1 4.5l1.7.6a4 4 0 001.9.2c.5-.1 1.7-.8 2-1.5.2-.6.2-1.2.1-1.4l-.5-.3M12 21.8a9.9 9.9 0 01-5-1.4l-.4-.2-3.7 1 1-3.7-.2-.3a9.9 9.9 0 01-1.5-5.3 9.9 9.9 0 0116.8-7 9.8 9.8 0 013 7 9.9 9.9 0 01-10 9.9m8.4-18.3A11.8 11.8 0 0012.1 0 12 12 0 001.8 17.8L0 24l6.4-1.6a11.9 11.9 0 005.6 1.4 12 12 0 0012-11.9 11.8 11.8 0 00-3.5-8.4z"
    }),
    color: "#25D366",
    url: function url(l, t) {
      return "https://api.whatsapp.com/send?text=" + t + " " + l;
    }
  },
  reddit: {
    title: "Reddit",
    path: /*#__PURE__*/React.createElement("path", {
      d: "M12 0A12 12 0 000 12a12 12 0 0012 12 12 12 0 0012-12A12 12 0 0012 0zm5.01 4.74c.69 0 1.25.56 1.25 1.25a1.25 1.25 0 01-2.5.06l-2.6-.55-.8 3.75c1.83.07 3.48.63 4.68 1.49.3-.31.73-.5 1.2-.5.97 0 1.76.8 1.76 1.76 0 .72-.43 1.33-1.01 1.61a3.11 3.11 0 01.04.52c0 2.7-3.13 4.87-7 4.87-3.88 0-7-2.17-7-4.87 0-.18 0-.36.04-.53A1.75 1.75 0 014.03 12a1.75 1.75 0 012.96-1.26 8.52 8.52 0 014.74-1.5l.89-4.17a.34.34 0 01.14-.2.35.35 0 01.24-.04l2.9.62a1.21 1.21 0 011.11-.7zM9.25 12a1.25 1.25 0 101.25 1.25c0-.69-.56-1.25-1.25-1.25zm5.5 0a1.25 1.25 0 000 2.5 1.25 1.25 0 000-2.5zm-5.47 3.99a.33.33 0 00-.23.1.33.33 0 000 .46c.84.84 2.49.91 2.96.91.48 0 2.1-.06 2.96-.91a.36.36 0 00.03-.47.33.33 0 00-.46 0c-.55.54-1.68.73-2.51.73-.83 0-1.98-.2-2.51-.73a.33.33 0 00-.24-.1z"
    }),
    color: "#FF4500",
    url: function url(l, t) {
      return "https://www.reddit.com/submit?url=" + l + "&title=" + t;
    }
  },
  telegram: {
    title: "Telegram",
    path: /*#__PURE__*/React.createElement("path", {
      d: "M23.91 3.79L20.3 20.84c-.25 1.21-.98 1.5-2 .94l-5.5-4.07-2.66 2.57c-.3.3-.55.56-1.1.56-.72 0-.6-.27-.84-.95L6.3 13.7.85 12c-1.18-.35-1.19-1.16.26-1.75l21.26-8.2c.97-.43 1.9.24 1.53 1.73z"
    }),
    color: "#0088CC",
    url: function url(l, t) {
      return "https://telegram.me/share/msg?url=" + l + "&text=" + t;
    }
  },
  linkedin: {
    title: "LinkedIn",
    path: /*#__PURE__*/React.createElement("path", {
      d: "M6.5 21.5h-5v-13h5v13zM4 6.5C2.5 6.5 1.5 5.3 1.5 4s1-2.4 2.5-2.4c1.6 0 2.5 1 2.6 2.5 0 1.4-1 2.5-2.6 2.5zm11.5 6c-1 0-2 1-2 2v7h-5v-13h5V10s1.6-1.5 4-1.5c3 0 5 2.2 5 6.3v6.7h-5v-7c0-1-1-2-2-2z"
    }),
    color: "#0073b1",
    url: function url(l, t, ti) {
      return "https://www.linkedin.com/sharing/share-offsite/?url=" + l + "&title=" + ti + "&summary=" + t;
    }
  },
  pinterest: {
    title: "Pinterest",
    path: /*#__PURE__*/React.createElement("path", {
      d: "M0 12C0 17.123 3.211 21.497 7.73 23.218C7.62 22.281 7.503 20.736 7.755 19.652C7.972 18.72 9.156 13.714 9.156 13.714C9.156 13.714 8.799 12.999 8.799 11.94C8.799 10.28 9.761 9.04 10.96 9.04C11.98 9.04 12.472 9.805 12.472 10.722C12.472 11.747 11.819 13.279 11.482 14.7C11.201 15.889 12.079 16.859 13.251 16.859C15.374 16.859 17.007 14.62 17.007 11.388C17.007 8.527 14.951 6.528 12.016 6.528C8.618 6.528 6.623 9.077 6.623 11.712C6.623 12.739 7.018 13.839 7.512 14.438C7.55412 14.4832 7.58387 14.5386 7.59841 14.5986C7.61295 14.6587 7.61177 14.7215 7.595 14.781C7.504 15.159 7.302 15.97 7.263 16.136C7.21 16.354 7.09 16.401 6.863 16.295C5.371 15.601 4.439 13.42 4.439 11.668C4.439 7.899 7.176 4.439 12.331 4.439C16.475 4.439 19.696 7.392 19.696 11.338C19.696 15.455 17.101 18.769 13.497 18.769C12.286 18.769 11.149 18.139 10.759 17.396C10.759 17.396 10.16 19.678 10.015 20.236C9.733 21.32 8.951 22.692 8.466 23.471C9.584 23.815 10.77 24 12 24C18.627 24 24 18.627 24 12C24 5.373 18.627 0 12 0C5.373 0 0 5.373 0 12Z"
    }),
    color: "#c8232c",
    url: function url(l) {
      return "http://pinterest.com/pin/create/link/?url=" + l;
    }
  },
  email: {
    title: "Email",
    path: /*#__PURE__*/React.createElement("path", {
      d: "M20 4H4a2 2 0 00-2 2v12c0 1.1.9 2 2 2h16a2 2 0 002-2V6a2 2 0 00-2-2zm0 4l-8 5-8-5V6l8 5 8-5v2z"
    }),
    color: "#E53E3E",
    url: function url(l, t) {
      return "mailto:?body=" + l + "&subject=" + t;
    }
  }
};

var windowOptions = {
  scrollbars: false,
  resizable: false,
  status: false,
  location: false,
  toolbar: false,
  menubar: false,
  left: window.screen.width / 2 - 300,
  top: window.screen.height / 2 - 250,
  height: 500,
  width: 600
};
var b = function b(o) {
  return o ? "yes" : "no";
};
var windowFeatures = "popup=yes, noopener, scrollbars=" + /*#__PURE__*/b(windowOptions.scrollbars) + ",resizable=" + /*#__PURE__*/b(windowOptions.resizable) + ",status=" + /*#__PURE__*/b(windowOptions.status) + ",location=" + /*#__PURE__*/b(windowOptions.location) + ",toolbar=" + /*#__PURE__*/b(windowOptions.toolbar) + ",menubar=" + /*#__PURE__*/b(windowOptions.menubar) + ", width=" + windowOptions.width + ",height=" + windowOptions.height + ",left=" + windowOptions.left + ",top=" + windowOptions.top;

var PortalComponent = function PortalComponent(_ref) {
  var children = _ref.children;
  var el = document.createElement("div");
  useEffect(function () {
    document.body.appendChild(el);
    return function () {
      document.body.removeChild(el);
    };
  }, [el]);
  return createPortal(children, el);
};

var CloseStyle = {
  color: "#323c5a",
  cursor: "pointer",
  padding: "0.75rem",
  display: "block",
  width: "100%",
  border: 0,
  fontSize: "1rem",
  transition: "0.3s"
};
function CloseButton(_ref) {
  var onClose = _ref.onClose,
    closeText = _ref.closeText;
  var _useState = useState(null),
    hover = _useState[0],
    setHover = _useState[1];
  return React.createElement("button", {
    style: _extends({}, CloseStyle, {
      background: hover ? "#d8dff6" : "#e5eaf9"
    }),
    onMouseEnter: function onMouseEnter() {
      return setHover(true);
    },
    onMouseLeave: function onMouseLeave() {
      return setHover(false);
    },
    "aria-label": "Close",
    type: "button",
    onClick: onClose
  }, closeText || "Close");
}

var CopyToClipboardStyle = {
  background: "#dfe5f7",
  color: "#252d43",
  cursor: "pointer",
  padding: "0.75rem",
  margin: "0 1.25rem 1.25rem 1.25rem",
  width: "calc(100% - 2.5rem)",
  border: 0,
  fontSize: "1rem",
  borderRadius: "0.4rem",
  display: "flex",
  alignItems: "center",
  justifyContent: "center",
  transition: "0.3s"
};
function CopyToClipboard(_ref) {
  var copyToClipboardText = _ref.copyToClipboardText,
    copySuccessText = _ref.copySuccessText,
    link = _ref.link;
  var _useState = useState(copyToClipboardText),
    buttonText = _useState[0],
    setButtonText = _useState[1];
  var _useState2 = useState(null),
    hover = _useState2[0],
    setHover = _useState2[1];
  var handleClick = function handleClick() {
    copy(link);
    setButtonText(copySuccessText);
    setTimeout(function () {
      return setButtonText(copyToClipboardText);
    }, 3000);
  };
  return React.createElement("button", {
    style: _extends({}, CopyToClipboardStyle, {
      background: hover ? "#cbd5f3" : "#dfe5f7"
    }),
    "aria-label": buttonText,
    type: "button",
    onClick: handleClick,
    onMouseEnter: function onMouseEnter() {
      return setHover(true);
    },
    onMouseLeave: function onMouseLeave() {
      return setHover(false);
    }
  }, React.createElement("span", {
    style: {
      display: "inline-flex",
      alignItems: "center",
      marginRight: "0.2rem"
    }
  }, React.createElement("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    height: "18px",
    viewBox: "0 0 24 24",
    width: "18px",
    fill: "#000000"
  }, React.createElement("path", {
    d: "M0 0h24v24H0V0z",
    fill: "none"
  }), React.createElement("path", {
    d: "M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm3 4H8c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm0 16H8V7h11v14z"
  }))), buttonText);
}

function Header(_ref) {
  var shareData = _ref.shareData;
  var url = new URL(shareData.link);
  var rootDomain = url.hostname.replace("www.", "");
  return React.createElement("header", {
    style: {
      padding: "1rem 1.25rem",
      fontSize: "0.75rem",
      fontWeight: 600,
      paddingBottom: 0,
      display: "flex",
      columnGap: "1rem",
      justifyContent: "flex-start",
      alignItems: "center"
    }
  }, shareData.linkFavicon !== "" && React.createElement("div", {
    style: {
      width: "3.2rem",
      height: "3.2rem",
      borderRadius: 6,
      flexShrink: 0,
      overflow: "hidden",
      flexBasis: "3.2rem"
    }
  }, React.createElement("img", {
    src: shareData.linkFavicon,
    alt: "Favicon for " + shareData.linkTitle,
    style: {
      width: "100%",
      height: "100%"
    }
  })), React.createElement("div", null, React.createElement("span", {
    style: {
      color: "rgba(0,0,0,1)",
      fontSize: "1rem",
      fontWeight: "bold",
      overflow: "hidden",
      textOverflow: "ellipsis",
      display: "-webkit-box",
      WebkitLineClamp: 1,
      lineClamp: 1,
      WebkitBoxOrient: "vertical"
    }
  }, shareData.linkTitle), React.createElement("span", {
    style: {
      color: "rgba(0,0,0,0.7)",
      overflow: "hidden",
      textOverflow: "ellipsis",
      display: "-webkit-box",
      WebkitLineClamp: 2,
      lineClamp: 2,
      WebkitBoxOrient: "vertical",
      margin: "0.15rem 0"
    }
  }, shareData.linkMetaDesc), React.createElement("span", {
    style: {
      fontWeight: "lighter",
      color: "rgba(0,0,0,0.5)",
      overflow: "hidden",
      textOverflow: "ellipsis",
      display: "-webkit-box",
      WebkitLineClamp: 1,
      lineClamp: 1,
      WebkitBoxOrient: "vertical"
    }
  }, rootDomain)));
}

function Icon(_ref) {
  var id = _ref.id,
    shareData = _ref.shareData,
    onClose = _ref.onClose,
    onClick = _ref.onClick,
    noReferer = _ref.noReferer;
  var _iconList$id = iconList[id],
    title = _iconList$id.title,
    path = _iconList$id.path,
    _iconList$id$viewBox = _iconList$id.viewBox,
    viewBox = _iconList$id$viewBox === void 0 ? "0 0 24 24" : _iconList$id$viewBox,
    color = _iconList$id.color,
    url = _iconList$id.url;
  var _useState = useState(null),
    hover = _useState[0],
    setHover = _useState[1];
  var handleOnButtonClicked = function handleOnButtonClicked() {
    onClick && onClick(); // callback
    var uri = url(encodeURIComponent(shareData.link), encodeURIComponent(shareData.textToShare), encodeURIComponent(shareData.linkTitle));
    window.open(uri, id, windowFeatures + ("" + (noReferer ? " noreferer" : "")));
    onClose();
  };
  return React.createElement("button", {
    onClick: handleOnButtonClicked,
    onMouseEnter: function onMouseEnter() {
      return setHover(true);
    },
    onMouseLeave: function onMouseLeave() {
      return setHover(false);
    },
    "aria-label": id,
    style: {
      width: "100%",
      height: "auto",
      cursor: "pointer",
      border: "none",
      background: "none"
    }
  }, React.createElement("div", {
    style: {
      borderRadius: "0.5rem",
      height: "auto",
      background: color,
      scale: hover ? "1.03" : "none",
      boxShadow: hover ? "0 0 12px rgba(0,0,0,0.2)" : "none",
      padding: "0.75rem",
      paddingBottom: "calc(0.5rem + 1px)"
    }
  }, React.createElement("svg", {
    fill: "white",
    viewBox: viewBox
  }, path)), React.createElement("span", {
    style: {
      display: "block",
      marginTop: "0.3rem",
      fontSize: "0.75rem"
    }
  }, title));
}

var SocialButtonsContainer = {
  maxWidth: "24rem",
  width: "90%",
  backgroundColor: "white",
  borderTopRightRadius: "0.5rem",
  borderTopLeftRadius: "0.5rem"
};
var SocialButtonsListStyle = {
  padding: "1.25rem",
  display: "grid",
  gridTemplateColumns: "repeat(4, minmax(60px,1fr))",
  columnGap: "0.75rem",
  rowGap: "0.6rem"
};
function Popup(_ref) {
  var onClose = _ref.onClose,
    shareTo = _ref.shareTo,
    shareData = _ref.shareData,
    openInWindow = _ref.openInWindow,
    noReferer = _ref.noReferer,
    closeText = _ref.closeText,
    copyToClipboardText = _ref.copyToClipboardText,
    copySuccessText = _ref.copySuccessText,
    onClick = _ref.onClick,
    fadeClass = _ref.fadeClass;
  return React.createElement("section", {
    role: "dialog",
    "aria-modal": "true",
    className: fadeClass,
    style: SocialButtonsContainer
  }, React.createElement(Header, {
    shareData: shareData
  }), React.createElement("div", {
    style: SocialButtonsListStyle
  }, shareTo.map(function (id) {
    return React.createElement(Icon, {
      id: id,
      key: id,
      shareData: shareData,
      onClose: onClose,
      onClick: onClick,
      openInWindow: openInWindow,
      noReferer: noReferer
    });
  })), React.createElement(CopyToClipboard, {
    link: shareData.link,
    copyToClipboardText: copyToClipboardText,
    copySuccessText: copySuccessText
  }), React.createElement(CloseButton, {
    onClose: onClose,
    closeText: closeText
  }));
}

function useDisclosure(isOpenDefault) {
  if (isOpenDefault === void 0) {
    isOpenDefault = false;
  }
  var _useState = useState(isOpenDefault),
    isOpen = _useState[0],
    setIsOpen = _useState[1];
  var onOpen = useCallback(function () {
    return setIsOpen(true);
  }, []);
  var onClose = useCallback(function () {
    return setIsOpen(false);
  }, []);
  var onToggle = useCallback(function () {
    return setIsOpen(function (state) {
      return !state;
    });
  }, []);
  return {
    isOpen: isOpen,
    onOpen: onOpen,
    onClose: onClose,
    onToggle: onToggle
  };
}

var ShareOnSocial = function ShareOnSocial(_ref) {
  var children = _ref.children,
    _ref$backdropColor = _ref.backdropColor,
    backdropColor = _ref$backdropColor === void 0 ? "rgba(0,0,0,0.4)" : _ref$backdropColor,
    _ref$closeText = _ref.closeText,
    closeText = _ref$closeText === void 0 ? "Close" : _ref$closeText,
    _ref$copyToClipboardT = _ref.copyToClipboardText,
    copyToClipboardText = _ref$copyToClipboardT === void 0 ? "Copy link" : _ref$copyToClipboardT,
    _ref$copySuccessText = _ref.copySuccessText,
    copySuccessText = _ref$copySuccessText === void 0 ? "Copied" : _ref$copySuccessText,
    _ref$shareTo = _ref.shareTo,
    shareTo = _ref$shareTo === void 0 ? Object.keys(iconList) : _ref$shareTo,
    textToShare = _ref.textToShare,
    link = _ref.link,
    linkTitle = _ref.linkTitle,
    linkMetaDesc = _ref.linkMetaDesc,
    linkFavicon = _ref.linkFavicon,
    _ref$noReferer = _ref.noReferer,
    noReferer = _ref$noReferer === void 0 ? false : _ref$noReferer,
    _ref$onSocialClick = _ref.onSocialClick,
    onSocialClick = _ref$onSocialClick === void 0 ? function () {
      return null;
    } : _ref$onSocialClick;
  var _useDisclosure = useDisclosure(),
    onOpen = _useDisclosure.onOpen,
    onClose = _useDisclosure.onClose,
    isOpen = _useDisclosure.isOpen;
  var _useState = useState("socialShareBackdropFadeIn"),
    backdropFadeClass = _useState[0],
    setBackdropFadeClass = _useState[1];
  var _useState2 = useState("socialSharePopupMoveIn"),
    popupFadeClass = _useState2[0],
    setPopupFadeClass = _useState2[1];
  var shareData = useMemo(function () {
    return {
      textToShare: textToShare || "",
      link: link || typeof window !== "undefined" && window.location.href || "",
      linkTitle: linkTitle || "",
      linkMetaDesc: linkMetaDesc || "",
      linkFavicon: linkFavicon
    };
  }, [textToShare, link, linkTitle, linkMetaDesc, linkFavicon]);
  var handleOnClick = /*#__PURE__*/function () {
    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {
      return _regeneratorRuntime().wrap(function _callee$(_context) {
        while (1) switch (_context.prev = _context.next) {
          case 0:
            if (!window.navigator.share) {
              _context.next = 12;
              break;
            }
            _context.prev = 1;
            _context.next = 4;
            return window.navigator.share({
              url: shareData.link,
              title: shareData.linkTitle,
              text: shareData.textToShare
            });
          case 4:
            onSocialClick();
            _context.next = 10;
            break;
          case 7:
            _context.prev = 7;
            _context.t0 = _context["catch"](1);
            console.warn(_context.t0);
          case 10:
            _context.next = 15;
            break;
          case 12:
            setPopupFadeClass("socialSharePopupMoveIn");
            setBackdropFadeClass("socialShareBackdropFadeIn");
            onOpen();
          case 15:
          case "end":
            return _context.stop();
        }
      }, _callee, null, [[1, 7]]);
    }));
    return function handleOnClick() {
      return _ref2.apply(this, arguments);
    };
  }();
  var handleOnClose = function handleOnClose() {
    setTimeout(onClose, 500);
    setPopupFadeClass("socialSharePopupMoveOut");
    setBackdropFadeClass("socialShareBackdropFadeOut");
  };
  return React.createElement(React.Fragment, null, cloneElement(children, _extends({}, children == null ? void 0 : children.props, {
    onClick: handleOnClick
  })), isOpen && React.createElement(PortalComponent, null, React.createElement(Backdrop, {
    onClose: handleOnClose,
    backdropColor: backdropColor,
    fadeClass: backdropFadeClass
  }, React.createElement(Popup, {
    onClose: handleOnClose,
    shareTo: shareTo,
    shareData: shareData,
    closeText: closeText,
    copyToClipboardText: copyToClipboardText,
    copySuccessText: copySuccessText,
    onClick: onSocialClick,
    noReferer: noReferer,
    fadeClass: popupFadeClass
  }))));
};

export default ShareOnSocial;
//# sourceMappingURL=react-share-on-social.esm.js.map
